package br.org.funcate.baurudigital.common.service;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;
import java.util.Map;

import org.codehaus.jackson.JsonFactory;
import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;

public class JSONService {
	public static Object parseJSON(String jsonFile, Class clazz)
	{
		ObjectMapper mapper = new ObjectMapper();
		Object object = null;
		try {
			
			// convert user object to json string, and save to a file
			// object = mapper.readValues(new File(jsonFile), clazz);
			
			final InputStream in = new FileInputStream("json.json");
			try {
			  for (Iterator it = new ObjectMapper().readValues(
			      new JsonFactory().createJsonParser(in), Map.class); it.hasNext();)
			    System.out.println(it.next());
			}
			finally { in.close();} }
			
			// display to console
			//System.out.println(mapper.writeValueAsString(user));

			
			
		} catch (JsonGenerationException e) {
	 
			e.printStackTrace();
	 
		} catch (JsonMappingException e) {
	 
			e.printStackTrace();
	 
		} catch (IOException e) {
	 
			e.printStackTrace();
	 
		}
		return object;
		
	}
}
